PKG_CONFIG = @pkg_config@
PREFIX = @prefix@
SYSTEM_LIBPNG = @system_libpng@
SYSTEM_LIBPNG_CFLAGS = @system_libpng_cflags@
SYSTEM_LIBPNG_LDFLAGS = @system_libpng_ldflags@
SYSTEM_LIBFREETYPE = @system_libfreetype@
WGET = @wget@

PWD=$(shell pwd)

BOOST_VERSION = 1_43_0
FCGI_VERSION = 2.4.0
HARU_VERSION = 2.1.0
GM_VERSION = 1.3.12
PNG_VERSION = 1.4.3
FREETYPE_VERSION = 2.4.2

WT_VERSION = 3.1.4

BOOST_DIR = boost_$(BOOST_VERSION)
BOOST_PACKAGE = $(BOOST_DIR).tar.bz2
BOOST_DOWNLOAD_URL = http://downloads.sourceforge.net/project/boost/boost/$(subst _,.,$(BOOST_VERSION))/$(BOOST_PACKAGE)

FCGI_DIR = fcgi-$(FCGI_VERSION)
FCGI_PACKAGE = $(FCGI_DIR).tar.gz
FCGI_DOWNLOAD_URL = http://www.fastcgi.com/dist/$(FCGI_PACKAGE)

HARU_DIR = libharu-$(HARU_VERSION)
HARU_PACKAGE = $(HARU_DIR).tar.bz2
HARU_DOWNLOAD_URL =  http://libharu.org/files/$(HARU_PACKAGE)

PNG_DIR = libpng-$(PNG_VERSION)
PNG_PACKAGE = $(PNG_DIR).tar.bz2
PNG_DOWNLOAD_URL = http://downloads.sourceforge.net/project/libpng/01-libpng-master/1.4.3/$(PNG_PACKAGE)

FREETYPE_DIR = freetype-$(FREETYPE_VERSION)
FREETYPE_PACKAGE = $(FREETYPE_DIR).tar.bz2
FREETYPE_DOWNLOAD_URL = http://sourceforge.net/projects/freetype/files/freetype2/2.4.2/$(FREETYPE_PACKAGE)/download

GM_DIR = GraphicsMagick-$(GM_VERSION)
GM_PACKAGE = $(GM_DIR).tar.bz2
GM_DOWNLOAD_URL = http://downloads.sourceforge.net/project/graphicsmagick/graphicsmagick/1.3.12/$(GM_PACKAGE)

STAGING = $(PWD)/staging

ifeq ($(SYSTEM_LIBPNG),no)
GM_DEPS := png
PNG_CFLAGS := -I$(STAGING)/include
PNG_LDFLAGS := -L$(STAGING)/lib
PNG_PREFIX := $(STAGING)
PNG_INSTALL_PREFIX := $(PREFIX)
HARU_DEPS := png
else
PNG_CFLAGS := $(SYSTEM_LIBPNG_CFLAGS)
PNG_LDFLAGS := $(SYSTEM_LIBPNG_LDFLAGS)
PNG_PREFIX := $(shell $(PKG_CONFIG) --variable=prefix libpng)
PNG_INSTALL_PREFIX := $(PNG_PREFIX)
endif

ifeq ($(SYSTEM_LIBFREETYPE),no)
GM_DEPS := $(GM_DEPS) freetype
FT_CFLAGS := $(GM_CFLAGS) -I$(STAGING)/include
FT_LDFLAGS := $(GM_LDFLAGS) -L$(STAGING)/lib
else
endif

GM_CFLAGS = $(PNG_CFLAGS) $(FT_CFLAGS)
GM_LDFLAGS = $(PNG_LDFLAGS) $(FT_LDFLAGS)
GM_INSTALL_LDFLAGS = $(SYSTEM_LIBPNG_LDFLAGS) -L$(PREFIX)/lib

WT_DIR = wt-$(WT_VERSION)
WT_PACKAGE = $(WT_DIR).tar.gz
WT_DOWNLOAD_URL = http://prdownloads.sourceforge.net/witty/$(WT_PACKAGE)?download

JOBS = -j 4

BOOST_BOOTSTRAP_ARGS = --prefix=$(PREFIX) --with-libraries=filesystem,date_time,regex,program_options,signals,system,thread
BOOST_BJAM_ARGS = $(JOBS)

CLEAN_FILES = config.status config.log config.cache autom4te.cache $(STAGING)
DIST_CLEAN_FILES = $(CLEAN_FILES) Makefile

default:
	@echo "Usage:"
	@echo "  make all          : Builds and installs Wt and its dependencies"
	@echo 
	@echo "  make deps         : Builds dependencies"
	@echo "  make deps-install : Installs dependencies"
	@echo "                        (needs permissions to ${PREFIX})"
	@echo "  make wt           : Builds wt"
	@echo "  make wt-install   : Installs wt"
	@echo "                        (needs permissions to ${PREFIX})"

all:	deps deps-install wt wt-install

clean: \
	boost-clean \
	haru-clean \
	fcgi-clean \
	gm-clean \
	wt-clean \
	$(addsuffix -clean,$(GM_DEPS))
	-rm -rf $(CLEAN_FILES)

distclean: \
	boost-distclean \
	haru-distclean \
	fcgi-distclean \
	gm-distclean \
	wt-distclean \
	$(addsuffix -distclean,$(GM_DEPS))
	-rm -rf $(DIST_CLEAN_FILES) 

deps: \
	boost \
	haru \
	fcgi \
	gm

deps-install: \
	boost-install \
	haru-install \
	fcgi-install \
	gm-install

boost: deps/$(BOOST_DIR)
	cd deps/$(BOOST_DIR); \
	./bootstrap.sh $(BOOST_BOOTSTRAP_ARGS); \
	./bjam $(BOOST_BJAM_ARGS);

boost-install:
	cd deps/$(BOOST_DIR); \
	./bjam install;

boost-clean:
	-rm -rf deps/$(BOOST_DIR)/stage deps/$(BOOST_DIR)/bin.v2

boost-distclean:
	-rm -rf deps/$(BOOST_DIR)

haru: deps/$(HARU_DIR) $(HARU_DEPS)
	cd deps/$(HARU_DIR) && \
		./configure --prefix=$(PREFIX) --with-png=$(PNG_PREFIX) && \
		make $(JOBS)

haru-install:
	cd deps/$(HARU_DIR) && \
		./configure --prefix=$(PREFIX) --with-png=$(PNG_INSTALL_PREFIX) && \
		make install

haru-clean:
	-cd deps/$(HARU_DIR) && make distclean

haru-distclean:
	-rm -rf deps/$(HARU_DIR)

fcgi: deps/$(FCGI_DIR)
	cd deps/$(FCGI_DIR) && ./configure --prefix=$(PREFIX) && make $(JOBS)

fcgi-install:
	cd deps/$(FCGI_DIR) && make install

fcgi-clean:
	-cd deps/$(FCGI_DIR) && make distclean

fcgi-distclean:
	-rm -rf deps/$(FCGI_DIR)

gm: deps/$(GM_DIR) $(GM_DEPS)
	cd deps/$(GM_DIR); \
		CFLAGS="$(GM_CFLAGS)" LDFLAGS="$(GM_LDFLAGS)" \
		./configure --prefix=$(PREFIX) \
			    --enable-shared=yes --enable-static=no; \
		make $(JOBS)

gm-install: $(addsuffix -install,$(GM_DEPS))
	cd deps/$(GM_DIR) && \
		rm libtool config.status; \
		CFLAGS="$(GM_CFLAGS)" \
		LDFLAGS="$(GM_INSTALL_LDFLAGS)" \
		./configure --prefix=$(PREFIX) \
		--enable-shared=yes --enable-static=no && make install

gm-clean: $(addsuffix -clean,$(GM_DEPS)) 
	-cd deps/$(GM_DIR) && make distclean

gm-distclean: $(addsuffix -distclean,$(GM_DEPS))
	-rm -rf deps/$(GM_DIR)

png: deps/$(PNG_DIR)
	cd deps/$(PNG_DIR) && \
		./configure --prefix=$(STAGING) && \
		make $(JOBS) && make install

png-install:
	cd deps/$(PNG_DIR) && ./configure --prefix=$(PREFIX) && make install

png-clean:
	-cd deps/$(PNG_DIR) && make distclean

png-distclean:
	-rm -rf deps/$(PNG_DIR)

freetype: deps/$(FREETYPE_DIR)
	cd deps/$(FREETYPE_DIR) && \
		./configure --prefix=$(STAGING) && \
		make $(JOBS) && make install

freetype-install:
	cd deps/$(FREETYPE_DIR) && ./configure --prefix=$(PREFIX) && make install

freetype-clean:
	-cd deps/$(FREETYPE_DIR) && make distclean

freetype-distclean:
	-rm -rf deps/$(FREETYPE_DIR)

wt: $(WT_DIR)
	-mkdir wt-build;
	cd wt-build && cmake ../$(WT_DIR) -DCMAKE_INSTALL_PREFIX=$(PREFIX) \
	  -DUSERLIB_PREFIX=$(PREFIX);
	cd wt-build && make $(JOBS);
	cd wt-build/examples && make $(JOBS);

wt-install:
	cd wt-build && make install;

wt-clean:
	rm -rf wt-build

wt-distclean: wt-clean
	-rm -rf $(WT_DIR)

deps/$(BOOST_DIR): deps/$(BOOST_PACKAGE)
	cd deps; tar -xjvf $(BOOST_PACKAGE)

deps/$(BOOST_PACKAGE):
	cd deps; $(WGET) $(BOOST_DOWNLOAD_URL)

deps/$(HARU_DIR): deps/$(HARU_PACKAGE)
	cd deps; tar -xjvf $(HARU_PACKAGE);
	cd deps/$(HARU_DIR); patch -p1 < ../HPDF_Page_Arc.patch

deps/$(HARU_PACKAGE):
	cd deps; $(WGET) $(HARU_DOWNLOAD_URL)

deps/$(FCGI_DIR): deps/$(FCGI_PACKAGE)
	cd deps; tar -xzvf $(FCGI_PACKAGE);
	cd deps/$(FCGI_DIR); patch -p1 < ../fcgi-2.4.0-stdio.patch

deps/$(FCGI_PACKAGE):
	cd deps; $(WGET) $(FCGI_DOWNLOAD_URL)

deps/$(GM_DIR): deps/$(GM_PACKAGE)
	cd deps; tar -xjvf $(GM_PACKAGE)

deps/$(GM_PACKAGE):
	cd deps; $(WGET) $(GM_DOWNLOAD_URL)

deps/$(PNG_DIR): deps/$(PNG_PACKAGE)
	cd deps; tar -xjvf $(PNG_PACKAGE)

deps/$(PNG_PACKAGE):
	cd deps; $(WGET) $(PNG_DOWNLOAD_URL)

deps/$(FREETYPE_DIR): deps/$(FREETYPE_PACKAGE)
	cd deps; tar -xjvf $(FREETYPE_PACKAGE)

deps/$(FREETYPE_PACKAGE):
	cd deps; $(WGET) $(FREETYPE_DOWNLOAD_URL)

$(WT_DIR): $(WT_PACKAGE)
	tar -xzvf $(WT_PACKAGE)

$(WT_PACKAGE):
	$(WGET) $(WT_DOWNLOAD_URL)

fetch-optional: deps/$(PNG_DIR) deps/$(FREETYPE_DIR)

fetch: fetch-optional $(WT_DIR) \
	deps/$(BOOST_DIR) \
	deps/$(FCGI_DIR) \
	deps/$(HARU_DIR) \
	deps/$(GM_DIR)
